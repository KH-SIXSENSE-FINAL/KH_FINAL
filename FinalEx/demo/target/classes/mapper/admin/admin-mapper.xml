<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">

	<resultMap id="memberResultSet" type="member">
		<id column="USER_NO" property="userNo" />
		<result column="USER_ID" property="userId" />
		<result column="USER_PWD" property="userPwd" />
		<result column="USER_NAME" property="userName" />
		<result column="EMAIL" property="email" />
		<result column="ENROLL_DATE" property="enrollDate" />
		<result column="USER_INFO" property="userInfo" />
		<result column="BACKMUSIC_NO" property="backMuNo" />
		<result column="MEMBERSHIP_NO" property="membershipNo" />
		<result column="STATUS" property="status" />
	</resultMap>
	
	<resultMap type="board" id="boardResultSet">
		<id column="BOARD_NO" property="boardNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="SECRET" property="secret"/>
		<result column="STATUS" property="status"/>
		<result column="MUSIC_NO" property="musicNo"/>
	</resultMap>
	
	<resultMap id="musicResultSet" type="music">
		<id column="MUSIC_NO" property="musicNo"/>
		<result column="MUSIC_TITLE" property="musicTitle"/>
		<result column="MUSIC_ARTIST" property="musicArtist"/>
		<result column="MUSIC_LYRICS" property="musicLyrics"/>
		<result column="GENRE" property="genre"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="PLAY_COUNT" property="playCount"/>
		<result column="DAILY_COUNT" property="dailyCount"/>
		<result column="HOUR_COUNT" property="hourCount"/>
		<result column="MUSIC_PATH" property="musicPath"/>
		<result column="COVER_PATH" property="coverPath"/>
		<result column="STATUS" property="status"/>
	</resultMap>


	<select id="selectMemberListCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
	</select>
	

	<select id="selectMemberList" resultType="member">
		SELECT *
		FROM MEMBER
		ORDER BY TO_NUMBER(USER_NO) DESC
	</select>
	
	
	<update id="updateMemberinfo"  parameterType="member">
		UPDATE MEMBER
		SET 
			USER_ID = #{userId},
			USER_NAME = #{userName},
			EMAIL = #{email},
			MEMBERSHIP_NO = #{membershipNo},
			STATUS = #{status}
		WHERE USER_NO = #{userNo}
	</update>
	
	<update id="WithdrawalMemberinfo"  parameterType="member">
		UPDATE MEMBER
		SET STATUS = 'N'
		WHERE USER_NO = #{userNo}
	</update>
	
	
	<update id="RestoreMemberinfo"  parameterType="member">
		UPDATE MEMBER
		SET STATUS = 'Y'
		WHERE USER_NO = #{userNo}
	</update>
	
	<!-- 회원관리 -->

	<select id="selectContentListCount" resultType="int">
		SELECT COUNT(*)
		FROM BOARD
	</select>

	<select id="selectContentList" resultType="board">
		SELECT B.BOARD_NO, M.USER_ID, B.BOARD_CONTENT, B.CREATE_DATE, B.SECRET, B.MUSIC_NO, B.STATUS
		FROM BOARD B
		JOIN MEMBER M USING(USER_NO)
		ORDER BY TO_NUMBER(B.BOARD_NO) DESC
	</select>

	<update id="adminDeleteContent"  parameterType="board">
		UPDATE BOARD
		SET STATUS = 'N'
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	
	<update id="adminRestoreContent"  parameterType="board">
		UPDATE BOARD
		SET STATUS = 'Y'
		WHERE BOARD_NO = #{boardNo}
	</update>

	<!-- 글관리 -->
	
	<select id="selectMusicListCount" resultType="int">
		SELECT COUNT(*)
		FROM MUSIC
	</select>

	<select id="selectMusicList" resultType="music">
		SELECT MUSIC_NO,MUSIC_TITLE,MUSIC_ARTIST,ENROLL_DATE,GENRE,STATUS
		FROM MUSIC
		ORDER BY TO_NUMBER(MUSIC_NO) DESC
	</select>

	<update id="adminDeleteMusic"  parameterType="music">
		UPDATE MUSIC
		SET STATUS = 'N'
		WHERE MUSIC_NO = #{musicNo}
	</update>
	
	
	<update id="adminRestoreMusic"  parameterType="music">
		UPDATE MUSIC
		SET STATUS = 'Y'
		WHERE MUSIC_NO = #{musicNo}
	</update>

	<!-- 여기는 멤버리스트 정렬 -->
	<select id="selectMemberListBySort" resultMap="memberResultSet">
	    SELECT * 
	    FROM MEMBER
	    <where>
	        <choose>
	            <when test="searchTerm != null and searchTerm != ''">
	               (USER_NO LIKE CONCAT(CONCAT('%', #{searchTerm}), '%') OR 
					USER_NAME LIKE CONCAT(CONCAT('%', #{searchTerm}), '%') OR 
					USER_ID LIKE CONCAT(CONCAT('%', #{searchTerm}), '%') OR 
					EMAIL LIKE CONCAT(CONCAT('%', #{searchTerm}), '%'))

	            </when>
	            <otherwise>
	                <!-- 이 경우에는 모든 회원을 가져옵니다. -->
	            </otherwise>
	        </choose>
	    </where>
	    <choose>
	        <when test="sortBy == 'userNo'">
	            ORDER BY TO_NUMBER(USER_NO) ASC
	        </when>
	        <when test="sortBy == 'userName'">
	            ORDER BY USER_NAME
	        </when>
	        <when test="sortBy == 'userId'">
	            ORDER BY USER_ID
	        </when>
	        <otherwise>
	            ORDER BY TO_NUMBER(USER_NO) DESC 
	        </otherwise>
	    </choose>
	</select>








</mapper>